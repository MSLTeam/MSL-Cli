name: Build For Android

on:
  push:
    branches: [ main ]
  pull_request:
  workflow_dispatch:

jobs:
  build-android:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        target:
          - aarch64-linux-android
          - armv7-linux-androideabi

    steps:
      - uses: actions/checkout@v4

      - uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.target }}

      - uses: nttld/setup-ndk@v1
        with:
          ndk-version: r25c
          add-to-path: true

      - name: Expose NDK clang in PATH
        run: |
          TOOLCHAIN_BIN="${ANDROID_NDK_HOME}/toolchains/llvm/prebuilt/linux-x86_64/bin"
          echo "${TOOLCHAIN_BIN}" >> $GITHUB_PATH
          ln -sf "${TOOLCHAIN_BIN}/aarch64-linux-android21-clang" "${TOOLCHAIN_BIN}/aarch64-linux-android-clang"
          ln -sf "${TOOLCHAIN_BIN}/armv7a-linux-androideabi21-clang" "${TOOLCHAIN_BIN}/armv7-linux-androideabi-clang"

      - name: Prepare OpenSSL source per-target
        run: |
          curl -LO https://www.openssl.org/source/openssl-3.2.2.tar.gz
          tar xf openssl-3.2.2.tar.gz
          mv openssl-3.2.2 "openssl-${{ matrix.target }}"

      - name: Build OpenSSL for Android
        shell: bash
        run: |
          set -eux
          ANDROID_API=21
          CONFIG_OPTS="no-shared no-tests no-async no-afalgeng no-asm no-bf no-rc2 no-rc4 no-cast no-idea no-stdio"
          if [ "${{ matrix.target }}" = "aarch64-linux-android" ]; then
            CONF="android-arm64"
            PREFIX="/opt/openssl-android-aarch64"
          else
            CONF="android-arm"
            PREFIX="/opt/openssl-android-armv7"
          fi
          cd "openssl-${{ matrix.target }}"
          perl ./Configure "$CONF" $CONFIG_OPTS --prefix="$PREFIX" \
            CC="${CONF}-clang" AR="llvm-ar" RANLIB="llvm-ranlib" NM="llvm-nm"
          make clean
          make -j1 install_sw

      - name: Configure Cargo for Android
        run: |
          mkdir -p .cargo
          cat > .cargo/config.toml << 'EOF'
          [target.aarch64-linux-android]
          linker = "aarch64-linux-android21-clang"
          ar = "llvm-ar"

          [target.armv7-linux-androideabi]
          linker = "armv7a-linux-androideabi21-clang"
