name: Build For Linux

on:
  push:
    tags:
      - 'v*'
      - 'v*-beta*'
      - 'v*-rc*'
      - 'nightly*'
  pull_request:
  workflow_dispatch:

jobs:
  build-linux-gnu-x86_64:
    name: Linux GNU (x86_64)
    runs-on: ubuntu-latest
    steps:
      - name: Checkout source
        uses: actions/checkout@v4

      - name: Cache Rust toolchain & Cargo registry
        uses: actions/cache@v4
        with:
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
          path: |
            - $HOME/.cargo/registry
            - $HOME/.cargo/git
            - $HOME/.rustup

      - name: Install Rust (stable)
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true

      - name: Build (release)
        run: cargo build --release --target x86_64-unknown-linux-gnu

      - name: Rename artifact
        run: |
          mkdir -p dist
          cp target/x86_64-unknown-linux-gnu/release/msl-cli \
             dist/msl-cli-x86_64-unknown-linux-gnu

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: msl-cli-x86_64-unknown-linux-gnu
          path: dist/msl-cli-x86_64-unknown-linux-gnu

  build-linux-musl-x86_64:
    name: Linux MUSL (x86_64)
    runs-on: ubuntu-latest
    steps:
      - name: Checkout source
        uses: actions/checkout@v4

      - name: Cache Rust toolchain & Cargo registry
        uses: actions/cache@v4
        with:
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
          path: |
            - $HOME/.cargo/registry
            - $HOME/.cargo/git
            - $HOME/.rustup

      - name: Install musl toolchain
        run: |
          sudo apt-get update
          sudo apt-get install -y musl-tools

      - name: Install Rust target
        run: rustup target add x86_64-unknown-linux-musl

      - name: Build (static musl)
        env:
          CC: x86_64-linux-musl-gcc
        run: cargo build --release --target x86_64-unknown-linux-musl

      - name: Rename artifact
        run: |
          mkdir -p dist
          cp target/x86_64-unknown-linux-musl/release/msl-cli \
             dist/msl-cli-x86_64-unknown-linux-musl

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: msl-cli-x86_64-unknown-linux-musl
          path: dist/msl-cli-x86_64-unknown-linux-musl

  build-linux-gnu-aarch64:
    name: Linux GNU (aarch64)
    runs-on: ubuntu-latest
    steps:
      - name: Checkout source
        uses: actions/checkout@v4

      - name: Cache Rust toolchain & Cargo registry
        uses: actions/cache@v4
        with:
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
          path: |
            - $HOME/.cargo/registry
            - $HOME/.cargo/git
            - $HOME/.rustup

      # ← 新增：安装 aarch64 glibc 交叉编译器
      - name: Install glibc cross compiler
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            gcc-aarch64-linux-gnu \
            g++-aarch64-linux-gnu

      - name: Install Rust (stable)
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true

      - name: Add aarch64-unknown-linux-gnu target
        run: rustup target add aarch64-unknown-linux-gnu

      # ← 新增：CC/CXX 环境变量指向交叉编译器
      - name: Build (release)
        env:
          CC_aarch64_unknown_linux_gnu: aarch64-linux-gnu-gcc
          CXX_aarch64_unknown_linux_gnu: aarch64-linux-gnu-g++
        run: cargo build --release --target aarch64-unknown-linux-gnu

      - name: Rename artifact
        run: |
          mkdir -p dist
          cp target/aarch64-unknown-linux-gnu/release/msl-cli \
             dist/msl-cli-aarch64-unknown-linux-gnu

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: msl-cli-aarch64-unknown-linux-gnu
          path: dist/msl-cli-aarch64-unknown-linux-gnu

  build-linux-musl-aarch64:
    name: Linux MUSL (aarch64)
    runs-on: ubuntu-latest
    steps:
      - name: Checkout source
        uses: actions/checkout@v4

      - name: Cache Rust toolchain & Cargo registry
        uses: actions/cache@v4
        with:
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
          path: |
            - $HOME/.cargo/registry
            - $HOME/.cargo/git
            - $HOME/.rustup

      # ← 新增：构建并安装 aarch64-musl 交叉编译器
      - name: Build musl-cross for aarch64
        run: |
          git clone https://github.com/richfelker/musl-cross-make.git
          cd musl-cross-make
          make TARGET=aarch64-linux-musl \
               PREFIX=$HOME/aarch64-musl-cross
          make install PREFIX=$HOME/aarch64-musl-cross
          echo "$HOME/aarch64-musl-cross/bin" >> $GITHUB_PATH

      - name: Install Rust (stable)
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true

      - name: Add aarch64-unknown-linux-musl target
        run: rustup target add aarch64-unknown-linux-musl

      # ← 新增：CC/CXX 环境变量指向 musl cross 编译器
      - name: Build (static musl)
        env:
          CC_aarch64_unknown_linux_musl: aarch64-linux-musl-gcc
          CXX_aarch64_unknown_linux_musl: aarch64-linux-musl-g++
        run: cargo build --release --target aarch64-unknown-linux-musl

      - name: Rename artifact
        run: |
          mkdir -p dist
          cp target/aarch64-unknown-linux-musl/release/msl-cli \
             dist/msl-cli-aarch64-unknown-linux-musl

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: msl-cli-aarch64-unknown-linux-musl
          path: dist/msl-cli-aarch64-unknown-linux-musl
